source('~/code/R/test.R', echo=TRUE)
source('~/code/R/test.R', echo=TRUE)
source('~/code/R/test.R', echo=TRUE)
names(df)
source('~/code/R/test.R', echo=TRUE)
source('~/code/R/test.R', echo=TRUE)
ggplot(df, aes(X, Y)) + geom_line(aes(color = Type)) + xytheme
source('~/code/R/test.R', echo=TRUE)
source('~/code/R/test.R', echo=TRUE)
source('~/code/R/test.R', echo=TRUE)
(565.31 / .13) * .03
2820 + 2950
5570 * 26
144820 / 230000
2817 / 4423
52 * 7
2820*52
2820*26
74 + 75
40000 / 149000
1024 * 8
2900 * 26
install.packages("installr")
library(installr)
updateR()
57842/70439
source('~/code/PE/24.R', echo=TRUE)
first.char = which(sapply(1:(length(x) - 1), function(i) x[i + 1] < x[i]))[1]
length(first.char)
sapply(1:(length(x) - 1), function(i) x[i + 1] < x[i])
first.char
first.char = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
x = c(4, 3, 6, 5, 2, 1)
first.char = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
first.char.index = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
first.char = x[first.char.index]
second.char.index = which(x > first.char)
second.char.index = second.char.index[second.char.index > first.char.index][1]
second.char.index
first.char.index = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
first.char = x[first.char.index]
second.char.index = which(x > first.char)
second.char.index[second.char.index > first.char.index]
second.char.index = second.char.index[second.char.index > first.char.index][1]
second.char = x[second.char.index]
first.char.index = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
first.char = x[first.char.index]
x.subset = x[-(1:first.char.index)]
second.char = min(x.subset[x.subset > first.char])
second.char.index = which(x == second.char)
first.char.index = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
first.char = x[first.char.index]
x.subset = x[-(1:first.char.index)]
second.char = min(x.subset[x.subset > first.char])
second.char.index = which(x == second.char)
x[first.char.index] = second.char
x[second.char.index] = first.char
x[-(1:first.char.index)] = sort(x[-(1:first.char.index)])
source('~/code/PE/24.R', echo=TRUE)
x = 0:2
first.char.index = which(sapply(1:(length(x) - 1), function(i) x[i] < x[i + 1]))[1]
first.char = x[first.char.index]
x.subset = x[-(1:first.char.index)]
second.char = min(x.subset[x.subset > first.char])
second.char.index = which(x == second.char)
x[first.char.index] = second.char
x[second.char.index] = first.char
x[-(1:first.char.index)]
sort(x[-(1:first.char.index)])
x
x[-(1:first.char.index)] = sort(x[-(1:first.char.index)])
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
x = iterate(x)
x = iterate(x)
x = iterate(x)
x = iterate(x)
x = iterate(x)
x = iterate(x)
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
source('~/code/PE/24.R', echo=TRUE)
paste0(x, collapse = "")
rm(list = ls())
27 + 36
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
results.df
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
library(grDevices)
X
chull(X)
install.packages("spatstat")
library(spatstat)
convexhull(X)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
X.eval
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
m.variable$thetaOpt
#Creating, plotting slopes
frontier.index = which(m.variable == 1)
#Creating, plotting slopes
frontier.index = which(m.variable$thetaOpt == 1)
frontier.index
x
x[frontier.index]
frontier.x = x[frontier.index]
frontier.y = y[frontier.index]
frontier.y
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
plot(frontier.y ~ frontier.x)
frontier.index
frontier.y
diff(frontier.x)
diff(frontier.y) / diff(frontier.x)
num.frontier.points = length(frontier.index)
slope.df = data.frame(x = c(frontier.x[1], rep(frontier.x[-c(1, num.frontier.points)], each = 2), frontier.x[num.frontier.points]))
slope.df
slope.df = data.frame(x = c(frontier.x[1], rep(frontier.x[-c(1, num.frontier.points)], each = 2), frontier.x[num.frontier.points]),
slope = rep(slopes, each = 2))
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
ggplot(slope.df, aes(x, slope)) + geom_line()
ggplot(slope.df, aes(x, slope)) + geom_line(aes(group = group))
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
slope.df = data.frame(x = c(frontier.x[1], rep(frontier.x[-c(1, num.frontier.points)], each = 2), frontier.x[num.frontier.points]),
slope = rep(slopes, each = 2),
group = factor(rep(1:(num.frontier.points - 1), each = 2)))
ggplot(slope.df, aes(x, slope)) + geom_line(aes(group = group))
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/genData.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/npbr_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
slope.df
slope.df
slopes
num.frontier.points = length(frontier.x)
frontier.x
frontier.order = order(frontier.x)
frontier.x = frontier.x[frontier.order]
frontier.y = frontier.y[frontier.order]
frontier.y
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
#Creating, plotting slopes
frontier.index = which(m.variable$thetaOpt == 1)
frontier.x = x[frontier.index]
frontier.y = y[frontier.index]
frontier.y
!(min(x) %in% frontier.x)
!(max(x) %in% frontier.x)
max.x.index = which.max(x)
m.variable$thetaOpt[43]
x[max.x.index]
y[max.x.index] / m.variable$thetaOpt[max.x.index]
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/npbr_plot.R', echo=TRUE)
#Creating, plotting slopes
#Constant RTS
end.index = c(which.min(x), which.max(x))
end.x = c(x[end.index[1]], x[end.index[2]])
end.y = c(y[end.index[1]] / m.constant$thetaOpt[end.index[1]], y[end.index[2]] / m.constant$thetaOpt[end.index[2]])
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
end.y
slope.constant = diff(end.y) / diff(end.x)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
slope.df
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R')
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
source('~/code/R/smoothing/npbr/reinstall.R', echo=TRUE)
source('~/docs/NPBR_paper/R/npbr_plot.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
efficiency.list
years[6]
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
efficiency.list
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
source('~/docs/NPBR_paper/analysis/analysis_relative.R', echo=TRUE)
setwd("~/docs/NPBR_paper/sensitivity")
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/R/dea_plot.R', echo=TRUE)
rowSums(m.variable$lambda)
colSums(m.variable$lambda)
frontier.index
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
library(truncnorm)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
#NPBR
reflected.data = reflect.data(x, y)
x = matrix(runif(N, x.range[1], x.range[2]), ncol = 1)
f.true = f(x)
f.x.true = f.x(x)
y = f.true - rtruncnorm(N, a = 0, sd = sd)
#NPBR
reflected.data = reflect.data(x, y)
x.reflect = reflected.data$X.reflected
y.reflect = reflected.data$y.reflected
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
m.npbr$efficiency
m.npbr$gradient.fit
f.x.true
m.npbr$y.fit
ggplot(point.df, aes(x, y)) + geom_point() + geom_line(data = fit.df)
point.df = data.frame(x, y)
fit.df = data.frame(x, y = m.npbr$y.fit)
ggplot(point.df, aes(x, y)) + geom_point() + geom_line(data = fit.df)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
x.reflect
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
x.reflect
m.npbr$gradient.fit
f.x.true
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
m.npbr$gradient.fit
f.x.true
#DEA
m.dea = dea(x, y, x, y, model = "output", RTS = "variable")
m.dea$thetaOpt
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
dea.slopes
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
frontier.y
source('~/docs/NPBR_paper/R/npbr_plot.R', echo=TRUE)
dea.slopes = diff(y) / diff(x)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
dea.slopes
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
fit.df
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
dea.slopes
dea.slopes = diff(frontier.y) / diff(frontier.x)
dea.slopes
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
dea.slopes
f.x.true
library(zoo)
rollmean(dea.slopes, 2)
dea.slopes
dea.slopes = c(dea.slopes[1], rollmean(dea.slopes, 2), dea.slopes[N - 1])
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
dea.slopes
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
#Run simulations
results.df = data.frame(x = NA,
efficiency = NA,
slope = NA,
efficiency.npbr = NA,
slope.npbr = NA,
efficiency.dea = NA,
slope.dea = NA,)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
results.df
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
results.df
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
head(results.df, 20)
results.df %>%
group_by(x) %>%
summarize(efficiency.diff.npbr = efficiency - efficiency.npbr,
efficiency.diff.dea = efficiency - efficiency.dea,)
results.df %>%
group_by(x) %>%
summarize(efficiency.diff.npbr = efficiency - efficiency.npbr,
efficiency.diff.dea = efficiency - efficiency.dea)
results.df %>%
group_by(x) %>%
summarize(efficiency.diff.npbr = mean(efficiency - efficiency.npbr),
efficiency.diff.dea = mean(efficiency - efficiency.dea))
results.df %>%
group_by(x) %>%
summarize(efficiency.diff.npbr = mean(efficiency - efficiency.npbr),
efficiency.diff.dea = mean(efficiency - efficiency.dea),
slope.diff.npbr = mean(slope - slope.npbr),
slope.diff.dea = mean(slope - slope.dea))
overall.results = point.results %>%
ungroup() %>%
summarize(efficiency.diff.npbr = mean(efficiency.diff.npbr),
efficiency.diff.dea = mean(efficiency.diff.dea),
slope.diff.npbr = mean(slope.diff.npbr),
slope.diff.dea = mean(slope.diff.dea))
point.results = results.df %>%
group_by(x) %>%
summarize(efficiency.diff.npbr = mean(efficiency - efficiency.npbr),
efficiency.diff.dea = mean(efficiency - efficiency.dea),
slope.diff.npbr = mean(slope - slope.npbr),
slope.diff.dea = mean(slope - slope.dea))
overall.results = point.results %>%
ungroup() %>%
summarize(efficiency.diff.npbr = mean(efficiency.diff.npbr),
efficiency.diff.dea = mean(efficiency.diff.dea),
slope.diff.npbr = mean(slope.diff.npbr),
slope.diff.dea = mean(slope.diff.dea))
point.results
overall.results
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
plot(y ~ x)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
y = f.true - rtruncnorm(N, a = 0, sd = sd)
#NPBR
reflected.data = reflect.data(x, y)
x.reflect = reflected.data$X.reflected
y.reflect = reflected.data$y.reflected
m.npbr = fit.frontier(x.reflect, y.reflect, x, y, x.constrained, x, y, method = "mc")
point.df = data.frame(x, y)
fit.df = data.frame(x, y = m.npbr$y.fit)
show(ggplot(point.df, aes(x, y)) + geom_point() + geom_line(data = fit.df))
#DEA
m.dea = dea(x, y, x, y, model = "output", RTS = "variable")
frontier.x = x
frontier.y = y / m.dea$thetaOpt
dea.slopes = diff(frontier.y) / diff(frontier.x)
dea.slopes = c(dea.slopes[1], rollmean(dea.slopes, 2), dea.slopes[N - 1])
point.df = data.frame(x, y)
fit.df = data.frame(x, y = y / m.dea$thetaOpt)
show(ggplot(point.df, aes(x, y)) + geom_point() + geom_line(data = fit.df))
#Save results
results.df = rbind(results.df, data.frame(x = x,
efficiency = y / f.true,
slope = f.x.true,
efficiency.npbr = m.npbr$efficiency,
slope.npbr = m.npbr$gradient.fit,
efficiency.dea = m.dea$thetaOpt,
slope.dea = dea.slopes,
sim = sim))
m.dea$thetaOpt
dea.slopes
length(dea.slopes)
b = 0.25
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
m.dea
m.dea$thetaOpt
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
#Package results
all.results = results.df %>%
summarize(efficiency.diff.npbr = efficiency - efficiency.npbr,
efficiency.diff.dea = efficiency - efficiency.dea,
slope.diff.npbr = slope - slope.npbr,
slope.diff.dea = slope - slope.dea)
#Package results
all.results = results.df %>%
mutate(efficiency.diff.npbr = efficiency - efficiency.npbr,
efficiency.diff.dea = efficiency - efficiency.dea,
slope.diff.npbr = slope - slope.npbr,
slope.diff.dea = slope - slope.dea)
head(all.results)
#Significance testing
t.test(all.results$efficiency.diff.npbr, mu = 0, alternative = "two.sided")
t.test(all.results$efficiency.diff.dea, mu = 0, alternative = "two.sided")
#Significance testing
t.test(all.results$efficiency.diff.npbr, mu = 0, alternative = "less")
t.test(all.results$efficiency.diff.npbr, all.results$efficiency.diff.dea, alternative = "less")
t.test(all.results$efficiency.diff.npbr, all.results$efficiency.diff.dea, alternative = "greater")
t.test(all.results$efficiency.diff.npbr, all.results$efficiency.diff.dea, alternative = "greater", paired = TRUE)
t.test(all.results$efficiency.diff.npbr, all.results$efficiency.diff.dea, alternative = "greater")
t.test(all.results$slope.diff.npbr, mu = 0, alternative = "two.sided")
t.test(all.results$slope.diff.dea, mu = 0, alternative = "two.sided")
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
point.df = data.frame(x, y)
fit.df = data.frame(x, y = y / m.dea$thetaOpt)
show(ggplot(point.df, aes(x, y)) + geom_point() + geom_line(data = fit.df))
point.df = data.frame(x, y)
fit.df = data.frame(x, y = m.npbr$y.fit)
show(ggplot(point.df, aes(x, y)) + geom_point() + geom_line(data = fit.df))
#Significance testing
# t.test(all.results$efficiency.diff.npbr, mu = 0, alternative = "two.sided")
# t.test(all.results$efficiency.diff.dea, mu = 0, alternative = "two.sided")
t.test(abs(all.results$efficiency.diff.npbr), abs(all.results$efficiency.diff.dea), alternative = "greater")
#Significance testing
# t.test(all.results$efficiency.diff.npbr, mu = 0, alternative = "two.sided")
# t.test(all.results$efficiency.diff.dea, mu = 0, alternative = "two.sided")
t.test(abs(all.results$efficiency.diff.npbr), abs(all.results$efficiency.diff.dea), alternative = "less")
# t.test(all.results$slope.diff.npbr, mu = 0, alternative = "two.sided")
# t.test(all.results$slope.diff.dea, mu = 0, alternative = "two.sided")
t.test(abs(all.results$slope.diff.npbr), abs(all.results$slope.diff.dea), alternative = "less")
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
source('~/docs/NPBR_paper/sensitivity/sensitivity.R', echo=TRUE)
overall.results = point.results %>%
ungroup() %>%
summarize(efficiency.diff.npbr = mean(efficiency.diff.npbr, na.rm = TRUE),
efficiency.diff.dea = mean(efficiency.diff.dea, na.rm = TRUE),
slope.diff.npbr = mean(slope.diff.npbr, na.rm = TRUE),
slope.diff.dea = mean(slope.diff.dea, na.rm = TRUE))
point.results
overall.results
apply(all.results,2,var)
apply(all.results,2,var, na.rm = T)
80 / 400
400 * .25
80 / 6
80 * (3/6)
80 * (1/6)
330 / 4
40 / 82.5
400 / 4
400 / 12
15 / 33.33333
15 / 33.33333333333
400 / 6
25 / 66.666666666
12 / 33.3333333
33.333333333 * 0.35
10 / 33.3333333
